package models

// This file was generated by the gogi.
// Editing this file might prove futile when you re-run the gogi generate command

import (
	"fmt"
	"strings"

	"github.com/go-openapi/validate"
)

// This file was generated by the gogi tool.
// Editing this file might prove futile when you re-run the swagger generate command

// ShipResponse ship response
// swagger:model ShipResponse

// easyjson:json
type ShipResponse struct {

	// count
	// Required: true
	Count int64 `json:"count"`

	// id
	// Required: true
	ID int64 `json:"id"`

	// length
	// Required: true
	Length int64 `json:"length"`
}

// Validate validates this ship response
func (m *ShipResponse) Validate() error {
	var res []error

	if err := m.validateCount(); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateID(); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLength(); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		msgs := []string{}
		for _, err := range res {
			msgs = append(msgs, err.Error())
		}
		return fmt.Errorf("validation failure list: " + strings.Join(msgs, "; "))
	}
	return nil
}

func (m *ShipResponse) validateCount() error {

	if err := validate.Required("count", "", int64(m.Count)); err != nil {
		return err
	}

	return nil
}

func (m *ShipResponse) validateID() error {

	if err := validate.Required("id", "", int64(m.ID)); err != nil {
		return err
	}

	return nil
}

func (m *ShipResponse) validateLength() error {

	if err := validate.Required("length", "", int64(m.Length)); err != nil {
		return err
	}

	return nil
}
