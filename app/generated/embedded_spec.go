package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server BattleShip server.",
    "title": "Swagger BattleShip",
    "termsOfService": "http://swagger.io/terms/",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/coordinates.add": {
      "post": {
        "description": "User add coordinates to his ship",
        "tags": [
          "coordinates"
        ],
        "operationId": "coordinates.add",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "coordinates.add"
                },
                "params": {
                  "$ref": "#/definitions/CoordinatesAddParams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/CoordinatesActResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/fight.act": {
      "post": {
        "description": "User fight enemy's ship",
        "tags": [
          "fight"
        ],
        "operationId": "fight.add",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "fight.add"
                },
                "params": {
                  "$ref": "#/definitions/FightActParams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/FightActResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/game.reset": {
      "post": {
        "description": "Start new game",
        "tags": [
          "game"
        ],
        "operationId": "game.reset",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "game.reset"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/GameResetResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/ship.list": {
      "post": {
        "description": "shipList",
        "tags": [
          "ship"
        ],
        "operationId": "ship.list.go",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false
                },
                "params": {
                  "$ref": "#/definitions/ShipListParams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ship Storage Info",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/ShipResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/user.create": {
      "post": {
        "description": "Create user",
        "tags": [
          "user"
        ],
        "operationId": "user.create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "user.create"
                },
                "params": {
                  "$ref": "#/definitions/UserCreateParams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns created user",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/UserResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/user.get": {
      "post": {
        "description": "userGet",
        "tags": [
          "user"
        ],
        "operationId": "user.get.go",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "jsonrpc",
                "id",
                "method",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jsonrpc": {
                  "type": "string",
                  "x-nullable": false,
                  "example": "2.0"
                },
                "method": {
                  "type": "string",
                  "x-nullable": false
                },
                "params": {
                  "$ref": "#/definitions/UserGetParams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Info",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BaseResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/definitions/UserGetResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseResponse": {
      "type": "object",
      "required": [
        "jsonrpc",
        "id"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        },
        "id": {
          "type": "string"
        },
        "jsonrpc": {
          "type": "string"
        }
      }
    },
    "CoordinatesActResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "shipStatus": {
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "type": "boolean",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "CoordinatesAddParams": {
      "type": "object",
      "required": [
        "userId",
        "shipId",
        "xCoord",
        "yCoord"
      ],
      "properties": {
        "shipId": {
          "type": "integer",
          "x-nullable": false
        },
        "userId": {
          "type": "integer",
          "x-nullable": false
        },
        "xCoord": {
          "type": "integer",
          "maximum": 10,
          "minimum": 1,
          "x-nullable": false
        },
        "yCoord": {
          "type": "integer",
          "maximum": 10,
          "minimum": 1,
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "CoordinatesResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "boolean",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Common error codes:\u003cbr /\u003e\n-32700 - Parse error\u003cbr /\u003e\n-32600 - Invalid Request\u003cbr /\u003e\n-32601 - Method not found\u003cbr /\u003e\n-32602 - Invalid params\u003cbr /\u003e\n-32603 - Internal error\u003cbr /\u003e\n-32000 - Server error\u003cbr /\u003e\n-1 - Undefined error\u003cbr /\u003e\n0 to 30000 - Business logic error\u003cbr /\u003e\n",
          "type": "integer",
          "x-nullable": false
        },
        "data": {
          "description": "Arbitary additional error-related data",
          "type": "object"
        },
        "message": {
          "description": "Human readable error description for debug usage",
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "FightActParams": {
      "type": "object",
      "required": [
        "userId",
        "xCoord",
        "yCoord"
      ],
      "properties": {
        "shipId": {
          "type": "integer",
          "x-nullable": false
        },
        "userId": {
          "type": "integer",
          "x-nullable": false
        },
        "xCoord": {
          "type": "integer",
          "maximum": 10,
          "minimum": 1,
          "x-nullable": false
        },
        "yCoord": {
          "type": "integer",
          "maximum": 10,
          "minimum": 1,
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "FightActResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "GameResetResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "ShipListParams": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "length": {
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "ShipResponse": {
      "type": "object",
      "required": [
        "id",
        "length",
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "length": {
          "type": "integer",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "UserCreateParams": {
      "type": "object",
      "required": [
        "userName"
      ],
      "properties": {
        "userName": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "UserCreateResponse": {
      "type": "object",
      "required": [
        "userName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "userName": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "UserGetParams": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "userName": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "UserGetResponse": {
      "type": "object",
      "required": [
        "id",
        "userName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "userName": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "UserResponse": {
      "type": "object",
      "required": [
        "userName"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "userName": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    }
  },
  "tags": [
    {
      "description": "BattleShip",
      "name": "ship"
    }
  ]
}`))
}
